resources:
- name: 1-click
  type: git
  source: 
    uri: https://github.com/petergtz/1-click-bosh-lite-pipeline.git

- name: bits-service-private-config
  type: git
  source:
    uri: git@github.com:cloudfoundry/bits-service-private-config.git
    branch: master
    private_key: {{github-private-key}}
    disable_ci_skip: true

- name: cf-deployment
  type: git
  source: 
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-smoke-tests
  type: git
  source: 
    uri: https://github.com/cloudfoundry/cf-smoke-tests.git

- name: boshlite-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-warden-boshlite-ubuntu-trusty-go_agent}

- name: (( concat meta.bosh-lite-name "-recreation-events" ))
  type: semver
  source: 
    driver: git
    uri: (( grab meta.events-git-repo ))
    branch: events
    file: (( concat "events-bosh-lites-" meta.bosh-lite-name "-created" ))
    private_key: {{github-private-key}}

- name: (( concat meta.bosh-lite-name "-cf-deployment-events" ))
  type: semver
  source:
    driver: git
    uri:  (( grab meta.events-git-repo ))
    branch: events
    file: (( concat "events-bosh-lites-" meta.bosh-lite-name "-deployments-cf-deleted" ))
    private_key: {{github-private-key}}

- name: every-24h
  type: time
  source:
    interval: 24h

jobs:
- name: (( concat "delete-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - get: 1-click
    - get: (( concat meta.bosh-lite-name "-recreation-events" ))
      params: { bump: major }
    - get: bits-service-private-config
  - task: bosh delete-env
    file: 1-click/tasks/bosh-delete-env.yml
    input_mapping:
      state: bits-service-private-config
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      MANIFEST: {{bosh-manifest}}
  - put: bits-service-private-config
    params:
      repository: out-state
  - put: (( concat meta.bosh-lite-name "-recreation-events" ))
    params:
      file: (( concat meta.bosh-lite-name "-recreation-events/number" ))

- name: (( concat "recreate-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - get: 1-click
    - get: (( concat meta.bosh-lite-name "-recreation-events" ))
      params: { bump: major }
      trigger: true
      passed: [ (( concat "delete-" meta.bosh-lite-name )) ]
    - get: bits-service-private-config
  - task: bosh create-env
    file: 1-click/tasks/bosh-create-env.yml
    input_mapping:
      manifest-dir: bits-service-private-config
      state: bits-service-private-config
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      MANIFEST: {{bosh-manifest}}
  - put: bits-service-private-config
    params:
      repository: out-state
  - put: (( concat meta.bosh-lite-name "-recreation-events" ))
    params:
      file: (( concat meta.bosh-lite-name "-recreation-events/number" ))

- name: (( concat "update-cloud-config-" meta.bosh-lite-name ))
  plan:
  - aggregate:
    - get: (( concat meta.bosh-lite-name "-recreation-events" ))
      trigger: true
      passed: [(( concat "recreate-" meta.bosh-lite-name ))]
    - { get: 1-click }
    - { get: cf-deployment, trigger: true }
    - get: bits-service-private-config
  - task: Update cloud-config
    file: 1-click/tasks/update-cloud-config.yml
    input_mapping:
      cf-deployment: cf-deployment
      state: bits-service-private-config
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))

- name: (( concat "delete-" meta.bosh-lite-name "-cf-deployment" ))
  serial: true
  plan:
  - aggregate:
    - get: 1-click
    - get: (( concat meta.bosh-lite-name "-cf-deployment-events" ))
      params: { bump: major }
    - get: bits-service-private-config
  - task: delete-deployment
    file: 1-click/tasks/bosh-delete-deployment.yml
    input_mapping:
      state: bits-service-private-config
    params:
      DEPLOYMENT_NAME: cf
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
  - put: (( concat meta.bosh-lite-name "-cf-deployment-events" ))
    params:
      file: (( concat meta.bosh-lite-name "-cf-deployment-events/number" ))

- name: (( concat "deploy-cf-in-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - get: 1-click
    - get: (( concat meta.bosh-lite-name "-cf-deployment-events" ))
      passed: [ (( concat "delete-" meta.bosh-lite-name "-cf-deployment" )) ]
      trigger: true
    - get: (( concat meta.bosh-lite-name "-recreation-events" ))
      trigger: true
      passed: [ (( concat "update-cloud-config-" meta.bosh-lite-name )) ]
    - get: bits-service-private-config
    - get: cf-deployment
    - { get: stemcell, resource: boshlite-stemcell, version: {version: "3468.19"} }
  - task: Generate cf deployment manifest
    file: 1-click/tasks/generate-cf-deployment-manifest.yml
    input_mapping:
      state: bits-service-private-config
    output_mapping:
      out: manifest
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      CF_SYSTEM_DOMAIN: (( grab meta.cf-system-domain ))
  - aggregate:
    - put: bits-service-private-config
      params:
        repository: out-state
    - task: Deploy cf
      file: 1-click/tasks/bosh-deploy.yml
      params:
        BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      input_mapping:
        state: bits-service-private-config

- name:  (( concat "run-cf-smoke-tests-in-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - get: 1-click
    - get: (( concat meta.bosh-lite-name "-cf-deployment-events" ))
      passed: [ (( concat "deploy-cf-in-" meta.bosh-lite-name )) ]
      trigger: true
    - get: (( concat meta.bosh-lite-name "-recreation-events" ))
      trigger: true
      passed: [ (( concat "deploy-cf-in-" meta.bosh-lite-name )) ]
    - get: bits-service-private-config
    - get: cf-smoke-tests
  - task: Run smoke-tests
    file: 1-click/tasks/run-smoke-tests.yml
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      CF_SYSTEM_DOMAIN: (( grab meta.cf-system-domain ))
    input_mapping:
      state: bits-service-private-config
  
- name: (( concat "clean-up-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - { get: 1-click }
    - { get: every-24h, trigger: true }
    - get: bits-service-private-config
  - task: bosh clean-up
    file: 1-click/tasks/bosh-clean-up.yml
    input_mapping:
      state: bits-service-private-config
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))

- name: (( concat "cancel-cf-deployment-task-in-" meta.bosh-lite-name ))
  serial: true
  plan:
  - aggregate:
    - { get: 1-click }
    - get: bits-service-private-config
  - task: bosh -d cf cancel-task 
    file: 1-click/tasks/bosh-cancel-task.yml
    input_mapping:
      state: bits-service-private-config
    params:
      BOSH_LITE_NAME: (( grab meta.bosh-lite-name ))
      DEPLOYMENT_NAME: cf


